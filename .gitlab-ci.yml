# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:stable

stages:
    - deploy
    - post-deploy

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://127.0.0.1:2375

services:
  - docker:dind

deploy-build-image:
  stage: deploy
  script: 
   # Write our GCP service account private key into a file
   - echo "$GCLOUD_SERVICE_KEY" | base64 -d > ./gcloud-service-key.json
   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
   - docker build --pull --cache-from $CI_REGISTRY_IMAGE:latest -f  pipeline-builder/Dockerfile -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF -t $CI_REGISTRY_IMAGE:latest .
   - docker push $CI_REGISTRY_IMAGE

deploy-infrastructure:
  stage: post-deploy

  image: $CI_REGISTRY_IMAGE:latest
      
  before_script:
  - gcloud container clusters get-credentials "$CLUSTER_NAME" --zone "$CLUSTER_ZONE" --project "$CLOUD_PROJECT"

  script:
  - kubectl apply -f infra-manifests/
  - kubectl apply -f ingress/ingress.yaml

deploy-helm-charts:
  stage: deploy

  image: $CI_REGISTRY_IMAGE:latest

  variables:
    HELM_CHART_BUCKET: myproject-helm-charts
    HELM_CHART_DIR: template-service

  script:
   # init helm properly
   - helm init --client-only
   # package the chart
   - cd helm-charts/
   - mkdir -p output
   - tree
   - helm package -d output/ "$HELM_CHART_DIR"
   # create a helm index file for that chart
   - helm repo index output --url "https://$HELM_CHART_BUCKET.storage.googleapis.com/"
   # sync it to GCS
   - gsutil rsync -d output "gs://$HELM_CHART_BUCKET/"
   # test the new chart
   - helm repo add "$HELM_CHART_DIR" "https://$HELM_CHART_BUCKET.storage.googleapis.com/"
   - helm repo list | grep "$HELM_CHART_DIR"

